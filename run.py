# -*- coding: utf-8 -*-import osimport sysimport socketimport webbrowserfrom threading import Timerfrom waitress import servefrom django.core.wsgi import get_wsgi_applicationfrom django.core.management import execute_from_command_line# Set Django settingsos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'file_manager.settings')def get_local_ip():    """Get local IP address"""    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)    try:        s.connect(('8.8.8.8', 80))        ip = s.getsockname()[0]    except Exception:        ip = '127.0.0.1'    finally:        s.close()    return ipdef get_free_port():    """Get a free port on the system"""    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)    sock.bind(('', 0))    port = sock.getsockname()[1]    sock.close()    return portdef open_browser(ip, port):    """Open the browser after a short delay"""    webbrowser.open(f'http://{ip}:{port}')def run_server():    """Run the Django application with waitress"""    # Get a free port and local IP    port = get_free_port()    ip = get_local_ip()        # Set IP and port as environment variables for Django    os.environ['SERVER_IP'] = ip    os.environ['SERVER_PORT'] = str(port)        # Prepare Django application    application = get_wsgi_application()        # Open browser after 1.5 seconds    Timer(1.5, open_browser, args=[ip, port]).start()        print(f"\nStarting File Sharing Server...")    print(f"Local Address: http://{ip}:{port}")    print(f"Network Address: http://{ip}:{port}")    print("\nScan the QR code in the browser window to connect from mobile devices")    print("To quit, close this window or press Ctrl+C\n")        # Run the server    serve(application, host='0.0.0.0', port=port)if __name__ == '__main__':    # If this is the first run, perform Django migrations    if not os.path.exists('db.sqlite3'):        execute_from_command_line(['manage.py', 'migrate'])        # Create uploads directory if it doesn't exist    if not os.path.exists('uploads'):        os.makedirs('uploads')        # Start the server    run_server()